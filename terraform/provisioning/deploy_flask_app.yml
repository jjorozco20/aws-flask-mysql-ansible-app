- name: Deploy and configure Flask app with Nginx on Amazon Linux EC2
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    remote_folder_path: "/home/ec2-user"
    python_package: "python3"
    pip_package: "python3-pip"

  tasks:
    # Ensure python3, pip, nginx, and Amazon SSM Agent are installed
    - name: Ensure required packages (python3, pip, amazon-ssm-agent) are installed
      yum:
        name:
          - "{{ python_package }}"
          - "{{ pip_package }}"
          - "amazon-ssm-agent"
        state: present

    - name: Check if nginx is available in amazon-linux-extras
      command: amazon-linux-extras list | grep nginx
      register: nginx_avail
      failed_when: nginx_avail.rc != 0
      changed_when: false
      ignore_errors: yes

    - name: Enable nginx via amazon-linux-extras if available
      command: amazon-linux-extras enable nginx1
      register: enable_nginx
      when: nginx_avail.rc == 0
      changed_when: true

    - name: Clean yum cache to make sure new repo is available
      command: yum clean all
      when: enable_nginx.changed
      changed_when: true

    - name: Update yum repo information
      command: yum makecache
      when: enable_nginx.changed
      changed_when: true

    - name: Install nginx
      yum:
        name: nginx
        state: present
      when: enable_nginx.changed

    # Ensure zip utility is installed on the control machine
    - name: Ensure zip utility is installed on the control machine
      command: "which zip"
      register: zip_check
      failed_when: zip_check.rc != 0
      changed_when: false

    - name: Configure Nginx to proxy requests to Flask app
      copy:
        dest: /etc/nginx/conf.d/flask-app.conf
        content: |
          server {
              listen 80;
              server_name _;

              location / {
                  proxy_pass http://127.0.0.1:5000;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              }
          }

    - name: Restart Amazon SSM Agent
      systemd:
        name: amazon-ssm-agent
        state: restarted
